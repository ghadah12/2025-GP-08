import 'package:flutter/material.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'waitingApproved.dart';

class LawyerSignup extends StatefulWidget {
  final String email;
  final String username;
  final String password;

  const LawyerSignup({
    super.key,
    required this.email,
    required this.username,
    required this.password,
  });

  @override
  State<LawyerSignup> createState() => _LawyerSignupState();
}

class _LawyerSignupState extends State<LawyerSignup> {
  final _formKey = GlobalKey<FormState>();

  final TextEditingController _phoneController = TextEditingController();
  final TextEditingController _cityController = TextEditingController();
  final TextEditingController _priceController = TextEditingController();
  final TextEditingController _licenseController = TextEditingController();

  String? _selectedSpecialty;
  String? _uploadedImageUrl;

  Future<void> registerLawyer() async {
    try {
      final credential = await FirebaseAuth.instance.createUserWithEmailAndPassword(
        email: widget.email,
        password: widget.password,
      );

      String uid = credential.user!.uid;

      await FirebaseFirestore.instance.collection('LegalProfessional').doc(uid).set({
        'uid': uid,
        'email': widget.email,
        'display_name': widget.username,
        'phone_number': _phoneController.text.trim(),
        'city': _cityController.text.trim(),
        'specialty': _selectedSpecialty,
        'price': int.tryParse(_priceController.text.trim()) ?? 0,
        'lawlicense': _licenseController.text.trim(),
        'photo_url': _uploadedImageUrl ?? '',
        'created_time': Timestamp.now(),
        'is_approved': false,
        'userType': 'legalProfessional',
      });

      ScaffoldMessenger.of(context).showSnackBar(
        const SnackBar(content: Text('✅ تم إنشاء الحساب بنجاح')),
      );

      Navigator.pushReplacement(
        context,
        MaterialPageRoute(builder: (context) => const WaitingApproved()),
      );
    } catch (e) {
      ScaffoldMessenger.of(context).showSnackBar(
        SnackBar(content: Text('❌ خطأ أثناء إنشاء الحساب: $e')),
      );
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      backgroundColor: const Color(0xFF062531),
      body: SafeArea(
        child: SingleChildScrollView(
          child: Container(
            width: double.infinity,
            constraints: BoxConstraints(
              minHeight: MediaQuery.of(context).size.height,
            ),
            padding: const EdgeInsets.all(20),
            decoration: const BoxDecoration(
              image: DecorationImage(
                image: AssetImage('assets/images/Beige_and_Brown_Aesthetic_Background_Instagram_Story2.png.jpg'), // بدون تغيير الاسم
                fit: BoxFit.cover,
              ),
            ),
            child: Column(
              children: [
                GestureDetector(
                  onTap: () {
                    // TODO: أضف ميزة رفع الصورة
                  },
                  child: CircleAvatar(
                    radius: 50,
                    backgroundColor: Colors.white,
                    backgroundImage: _uploadedImageUrl != null
                        ? NetworkImage(_uploadedImageUrl!)
                        : const AssetImage('assets/images/hk.jpeg') as ImageProvider, // بدون تغيير الاسم
                  ),
                ),
                const SizedBox(height: 30),

                Form(
                  key: _formKey,
                  child: Column(
                    children: [
                      _buildTextField(
                        controller: _phoneController,
                        label: 'رقم الجوال',
                        keyboardType: TextInputType.phone,
                      ),
                      _buildTextField(
                        controller: _cityController,
                        label: 'المدينة',
                        keyboardType: TextInputType.text,
                      ),
                      DropdownButtonFormField<String>(
                        value: _selectedSpecialty,
                        items: const [
                          DropdownMenuItem(value: 'قوانين الأسرة', child: Text('قوانين الأسرة')),
                          DropdownMenuItem(value: 'عقود الإيجار', child: Text('عقود الإيجار')),
                          DropdownMenuItem(value: 'مخالفات المرور', child: Text('مخالفات المرور')),
                        ],
                        onChanged: (value) => setState(() => _selectedSpecialty = value),
                        decoration: _inputDecoration(label: 'التخصص'),
                      ),
                      _buildTextField(
                        controller: _priceController,
                        label: 'سعر الأستشارة',
                        keyboardType: TextInputType.number,
                      ),
                      _buildTextField(
                        controller: _licenseController,
                        label: 'رقم رخصة المحاماة',
                        keyboardType: TextInputType.text,
                      ),
                      const SizedBox(height: 20),
                      ElevatedButton(
                        onPressed: () {
                          if (_formKey.currentState!.validate()) {
                            registerLawyer();
                          }
                        },
                        style: ElevatedButton.styleFrom(
                          backgroundColor: const Color(0xFFA6847C),
                          padding: const EdgeInsets.symmetric(horizontal: 40, vertical: 15),
                          shape: RoundedRectangleBorder(borderRadius: BorderRadius.circular(40)),
                        ),
                        child: const Text('إنشاء الحساب', style: TextStyle(color: Colors.white, fontSize: 16)),
                      ),
                    ],
                  ),
                ),
              ],
            ),
          ),
        ),
      ),
    );
  }

  Widget _buildTextField({
    required TextEditingController controller,
    required String label,
    required TextInputType keyboardType,
  }) {
    return Padding(
      padding: const EdgeInsets.symmetric(vertical: 8),
      child: TextFormField(
        controller: controller,
        keyboardType: keyboardType,
        style: const TextStyle(color: Colors.black),
        decoration: _inputDecoration(label: label),
        validator: (value) => value == null || value.isEmpty ? 'هذا الحقل مطلوب' : null,
      ),
    );
  }

  InputDecoration _inputDecoration({required String label}) {
    return InputDecoration(
      labelText: label,
      filled: true,
      fillColor: Colors.white,
      contentPadding: const EdgeInsets.symmetric(horizontal: 20, vertical: 16),
      border: OutlineInputBorder(borderRadius: BorderRadius.circular(40)),
    );
  }
}
